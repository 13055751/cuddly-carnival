var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// src/utils/error.ts
import { logger as koishiLogger } from "koishi-plugin-chatluna";
var ERROR_FORMAT_TEMPLATE = "使用 ChatLuna 时出现错误，错误码为 %s。请联系开发者以解决此问题。";
var setErrorFormatTemplate = /* @__PURE__ */ __name((template) => {
  if (template) {
    ERROR_FORMAT_TEMPLATE = template;
  }
}, "setErrorFormatTemplate");
var ChatLunaError = class extends Error {
  constructor(errorCode = 999 /* UNKNOWN_ERROR */, originError) {
    super(ERROR_FORMAT_TEMPLATE.replace("%s", errorCode.toString()));
    this.errorCode = errorCode;
    this.originError = originError;
    this.name = "ChatLunaError";
    const logger = koishiLogger ?? console;
    logger.error(
      "=".repeat(20) + "ChatLunaError:" + errorCode + "=".repeat(20)
    );
    if (originError) {
      logger.error(originError);
      if (originError.cause) {
        logger.error(originError.cause);
      }
    } else {
      logger.error(this);
    }
  }
  static {
    __name(this, "ChatLunaError");
  }
  toString() {
    return this.message;
  }
};
var ChatLunaErrorCode = /* @__PURE__ */ ((ChatLunaErrorCode2) => {
  ChatLunaErrorCode2[ChatLunaErrorCode2["NETWORK_ERROR"] = 1] = "NETWORK_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["UNSUPPORTED_PROXY_PROTOCOL"] = 2] = "UNSUPPORTED_PROXY_PROTOCOL";
  ChatLunaErrorCode2[ChatLunaErrorCode2["QUEUE_OVERFLOW"] = 3] = "QUEUE_OVERFLOW";
  ChatLunaErrorCode2[ChatLunaErrorCode2["RENDER_ERROR"] = 4] = "RENDER_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["ABORTED"] = 5] = "ABORTED";
  ChatLunaErrorCode2[ChatLunaErrorCode2["PLUGIN_ALREADY_REGISTERED"] = 6] = "PLUGIN_ALREADY_REGISTERED";
  ChatLunaErrorCode2[ChatLunaErrorCode2["API_KEY_UNAVAILABLE"] = 100] = "API_KEY_UNAVAILABLE";
  ChatLunaErrorCode2[ChatLunaErrorCode2["API_REQUEST_RESOLVE_CAPTCHA"] = 101] = "API_REQUEST_RESOLVE_CAPTCHA";
  ChatLunaErrorCode2[ChatLunaErrorCode2["API_REQUEST_TIMEOUT"] = 102] = "API_REQUEST_TIMEOUT";
  ChatLunaErrorCode2[ChatLunaErrorCode2["API_REQUEST_FAILED"] = 103] = "API_REQUEST_FAILED";
  ChatLunaErrorCode2[ChatLunaErrorCode2["API_UNSAFE_CONTENT"] = 104] = "API_UNSAFE_CONTENT";
  ChatLunaErrorCode2[ChatLunaErrorCode2["MODEL_ADAPTER_NOT_FOUND"] = 300] = "MODEL_ADAPTER_NOT_FOUND";
  ChatLunaErrorCode2[ChatLunaErrorCode2["MODEL_NOT_FOUND"] = 301] = "MODEL_NOT_FOUND";
  ChatLunaErrorCode2[ChatLunaErrorCode2["PREST_NOT_FOUND"] = 302] = "PREST_NOT_FOUND";
  ChatLunaErrorCode2[ChatLunaErrorCode2["MODEL_INIT_ERROR"] = 303] = "MODEL_INIT_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["EMBEDDINGS_INIT_ERROR"] = 304] = "EMBEDDINGS_INIT_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["VECTOR_STORE_INIT_ERROR"] = 305] = "VECTOR_STORE_INIT_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["CHAT_HISTORY_INIT_ERROR"] = 306] = "CHAT_HISTORY_INIT_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["NOT_AVAILABLE_CONFIG"] = 307] = "NOT_AVAILABLE_CONFIG";
  ChatLunaErrorCode2[ChatLunaErrorCode2["MODEL_CONVERSION_INIT_ERROR"] = 308] = "MODEL_CONVERSION_INIT_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["MODEL_RESPONSE_IS_EMPTY"] = 309] = "MODEL_RESPONSE_IS_EMPTY";
  ChatLunaErrorCode2[ChatLunaErrorCode2["PRESET_LOAD_ERROR"] = 311] = "PRESET_LOAD_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["MODEL_DEPOSE_ERROR"] = 310] = "MODEL_DEPOSE_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["LONG_MEMORY_INIT_ERROR"] = 312] = "LONG_MEMORY_INIT_ERROR";
  ChatLunaErrorCode2[ChatLunaErrorCode2["MEMBER_NOT_IN_ROOM"] = 400] = "MEMBER_NOT_IN_ROOM";
  ChatLunaErrorCode2[ChatLunaErrorCode2["ROOM_NOT_JOINED"] = 401] = "ROOM_NOT_JOINED";
  ChatLunaErrorCode2[ChatLunaErrorCode2["ROOM_NOT_FOUND_MASTER"] = 402] = "ROOM_NOT_FOUND_MASTER";
  ChatLunaErrorCode2[ChatLunaErrorCode2["ROOM_TEMPLATE_INVALID"] = 403] = "ROOM_TEMPLATE_INVALID";
  ChatLunaErrorCode2[ChatLunaErrorCode2["THE_NAME_FIND_IN_MULTIPLE_ROOMS"] = 404] = "THE_NAME_FIND_IN_MULTIPLE_ROOMS";
  ChatLunaErrorCode2[ChatLunaErrorCode2["ROOM_NOT_FOUND"] = 405] = "ROOM_NOT_FOUND";
  ChatLunaErrorCode2[ChatLunaErrorCode2["INIT_ROOM"] = 406] = "INIT_ROOM";
  ChatLunaErrorCode2[ChatLunaErrorCode2["KNOWLEDGE_CONFIG_INVALID"] = 500] = "KNOWLEDGE_CONFIG_INVALID";
  ChatLunaErrorCode2[ChatLunaErrorCode2["KNOWLEDGE_DOC_NOT_FOUND"] = 501] = "KNOWLEDGE_DOC_NOT_FOUND";
  ChatLunaErrorCode2[ChatLunaErrorCode2["KNOWLEDGE_LOOP_INCLUDE"] = 502] = "KNOWLEDGE_LOOP_INCLUDE";
  ChatLunaErrorCode2[ChatLunaErrorCode2["KNOWLEDGE_UNSUPPORTED_FILE_TYPE"] = 503] = "KNOWLEDGE_UNSUPPORTED_FILE_TYPE";
  ChatLunaErrorCode2[ChatLunaErrorCode2["KNOWLEDGE_EXIST_FILE"] = 504] = "KNOWLEDGE_EXIST_FILE";
  ChatLunaErrorCode2[ChatLunaErrorCode2["KNOWLEDGE_VECTOR_NOT_FOUND"] = 505] = "KNOWLEDGE_VECTOR_NOT_FOUND";
  ChatLunaErrorCode2[ChatLunaErrorCode2["USER_NOT_FOUND"] = 600] = "USER_NOT_FOUND";
  ChatLunaErrorCode2[ChatLunaErrorCode2["AUTH_GROUP_NOT_FOUND"] = 601] = "AUTH_GROUP_NOT_FOUND";
  ChatLunaErrorCode2[ChatLunaErrorCode2["AUTH_GROUP_NOT_JOINED"] = 602] = "AUTH_GROUP_NOT_JOINED";
  ChatLunaErrorCode2[ChatLunaErrorCode2["AUTH_GROUP_ALREADY_JOINED"] = 603] = "AUTH_GROUP_ALREADY_JOINED";
  ChatLunaErrorCode2[ChatLunaErrorCode2["UNKNOWN_ERROR"] = 999] = "UNKNOWN_ERROR";
  return ChatLunaErrorCode2;
})(ChatLunaErrorCode || {});
export {
  ChatLunaError,
  ChatLunaErrorCode,
  ERROR_FORMAT_TEMPLATE,
  setErrorFormatTemplate
};
