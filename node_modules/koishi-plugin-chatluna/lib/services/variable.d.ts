import { BaseMessage } from '@langchain/core/messages';
import { Session } from 'koishi';
import { PresetTemplate } from 'koishi-plugin-chatluna/llm-core/prompt';
export type VariableFunction = (args: string[], inputVariables: Record<string, string | (() => string)>, session?: Session) => Promise<string> | string;
export type VariableProvider = () => Record<string, string | (() => string)>;
export declare class PresetFormatService {
    private _functionHandlers;
    private _variableProviders;
    private _staticVariables;
    constructor();
    private _initBuiltinFunctions;
    registerFunction(name: string, handler: VariableFunction): () => void;
    replaceFunction(name: string, handler: VariableFunction): () => void;
    hasFunction(name: string): boolean;
    registerVariableProvider(provider: VariableProvider): () => void;
    setVariable(name: string, value: string | (() => string)): void;
    getVariable(name: string): string | (() => string) | undefined;
    removeVariable(name: string): void;
    private _getAllVariables;
    private _evaluateFunction;
    formatPresetTemplateString(rawString: string, inputVariables?: Record<string, string | (() => string)>, variables?: string[], session?: Session): Promise<string>;
    formatMessages(messages: BaseMessage[], variables?: Record<string, string>, session?: Session): Promise<BaseMessage[]>;
    formatPresetTemplate(presetTemplate: PresetTemplate, inputVariables?: Record<string, string>, returnVariables?: boolean, session?: Session): Promise<BaseMessage[] | [BaseMessage[], string[]]>;
    getFunctionNames(): string[];
    getVariableNames(): string[];
}
