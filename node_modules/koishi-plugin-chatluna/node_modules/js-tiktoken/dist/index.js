import { never, Tiktoken, getEncodingNameForModel } from './chunk-Z5MDQTGX.js';
export { Tiktoken, getEncodingNameForModel } from './chunk-Z5MDQTGX.js';

// src/ranks/gpt2.js
var gpt2_default = {
  pat_str: "",
  special_tokens: {},
  bpe_ranks: ""
};

// src/ranks/p50k_base.js
var p50k_base_default = {
  pat_str: "",
  special_tokens: {},
  bpe_ranks: ""
};

// src/ranks/p50k_edit.js
var p50k_edit_default = {
  pat_str: "",
  special_tokens: {},
  bpe_ranks: ""
};

// src/ranks/r50k_base.js
var r50k_base_default = {
  pat_str: "",
  special_tokens: {},
  bpe_ranks: ""
};

// src/ranks/cl100k_base.js
var cl100k_base_default = {
  pat_str: "",
  special_tokens: {},
  bpe_ranks: ""
};

// src/ranks/o200k_base.js
var o200k_base_default = {
  pat_str: "",
  special_tokens: {},
  bpe_ranks: ""
};

// src/index.ts
function getEncoding(encoding, extendSpecialTokens) {
  switch (encoding) {
    case "gpt2":
      return new Tiktoken(gpt2_default, extendSpecialTokens);
    case "r50k_base":
      return new Tiktoken(r50k_base_default, extendSpecialTokens);
    case "p50k_base":
      return new Tiktoken(p50k_base_default, extendSpecialTokens);
    case "p50k_edit":
      return new Tiktoken(p50k_edit_default, extendSpecialTokens);
    case "cl100k_base":
      return new Tiktoken(cl100k_base_default, extendSpecialTokens);
    case "o200k_base":
      return new Tiktoken(o200k_base_default, extendSpecialTokens);
    default:
      never(encoding);
      throw new Error("Unknown encoding");
  }
}
function encodingForModel(model, extendSpecialTokens) {
  return getEncoding(getEncodingNameForModel(model), extendSpecialTokens);
}

export { encodingForModel, getEncoding };
