import { StructuredTool } from '@langchain/core/tools';
import { Context } from 'koishi';
import type { PuppeteerLifeCycleEvent } from 'puppeteer-core';
import { Embeddings } from '@langchain/core/embeddings';
import { ChatLunaChatModel } from 'koishi-plugin-chatluna/llm-core/platform/model';
export interface PuppeteerBrowserToolOptions {
    timeout?: number;
    idleTimeout?: number;
    waitUntil?: PuppeteerLifeCycleEvent;
    fastMode?: boolean;
}
export declare class PuppeteerBrowserTool extends StructuredTool {
    name: string;
    description: string;
    private pages;
    private lastActionTime;
    private readonly timeout;
    private readonly idleTimeout;
    private model;
    private ctx;
    private waitUntil;
    private disposables;
    schema: any;
    private actions;
    constructor(ctx: Context, model: ChatLunaChatModel, embeddings: Embeddings, options?: PuppeteerBrowserToolOptions);
    _call(input: {
        url: string;
        action: string;
        params: string;
    }): Promise<string>;
    private getPage;
    private openPage;
    private summarizePage;
    private getPageText;
    private summarizeText;
    private selectDiv;
    private goToPreviousPage;
    private getHtml;
    private getStructuredUrls;
    private startIdleTimer;
    closeBrowser(): Promise<void>;
}
