import { ChatGenerationChunk } from '@langchain/core/outputs';
import { EmbeddingsRequester, EmbeddingsRequestParams, ModelRequester, ModelRequestParams } from 'koishi-plugin-chatluna/llm-core/platform/api';
import { ClientConfig } from 'koishi-plugin-chatluna/llm-core/platform/config';
import { Config } from '.';
import { ChatLunaPlugin } from 'koishi-plugin-chatluna/services/chat';
export declare class GeminiRequester extends ModelRequester implements EmbeddingsRequester {
    private _config;
    private _plugin;
    private _pluginConfig;
    constructor(_config: ClientConfig, _plugin: ChatLunaPlugin, _pluginConfig: Config);
    completionStream(params: ModelRequestParams): AsyncGenerator<ChatGenerationChunk>;
    embeddings(params: EmbeddingsRequestParams): Promise<number[] | number[][]>;
    getModels(): Promise<string[]>;
    private _post;
    private _get;
    private _concatUrl;
    private _buildHeaders;
    init(): Promise<void>;
    dispose(): Promise<void>;
}
