import { Context } from 'koishi';
import { PlatformModelAndEmbeddingsClient } from 'koishi-plugin-chatluna/llm-core/platform/client';
import { ClientConfig } from 'koishi-plugin-chatluna/llm-core/platform/config';
import { ChatHubBaseEmbeddings, ChatLunaChatModel } from 'koishi-plugin-chatluna/llm-core/platform/model';
import { ModelInfo } from 'koishi-plugin-chatluna/llm-core/platform/types';
import { Config } from '.';
import { ChatLunaPlugin } from 'koishi-plugin-chatluna/services/chat';
export declare class GeminiClient extends PlatformModelAndEmbeddingsClient {
    private _config;
    platform: string;
    private _requester;
    private _models;
    constructor(ctx: Context, _config: Config, clientConfig: ClientConfig, plugin: ChatLunaPlugin);
    init(): Promise<void>;
    refreshModels(): Promise<ModelInfo[]>;
    getModels(): Promise<ModelInfo[]>;
    protected _createModel(model: string): ChatLunaChatModel | ChatHubBaseEmbeddings;
}
